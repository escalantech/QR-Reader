// Generated by view binder compiler. Do not edit!
package com.ltw.qrreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ltw.qrreader.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScanHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button copyButton;

  @NonNull
  public final Button openButton;

  @NonNull
  public final TextView scanContentText;

  @NonNull
  public final TextView scanDateText;

  @NonNull
  public final Button shareButton;

  private ItemScanHistoryBinding(@NonNull CardView rootView, @NonNull Button copyButton,
      @NonNull Button openButton, @NonNull TextView scanContentText, @NonNull TextView scanDateText,
      @NonNull Button shareButton) {
    this.rootView = rootView;
    this.copyButton = copyButton;
    this.openButton = openButton;
    this.scanContentText = scanContentText;
    this.scanDateText = scanDateText;
    this.shareButton = shareButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScanHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScanHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_scan_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScanHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copyButton;
      Button copyButton = ViewBindings.findChildViewById(rootView, id);
      if (copyButton == null) {
        break missingId;
      }

      id = R.id.openButton;
      Button openButton = ViewBindings.findChildViewById(rootView, id);
      if (openButton == null) {
        break missingId;
      }

      id = R.id.scanContentText;
      TextView scanContentText = ViewBindings.findChildViewById(rootView, id);
      if (scanContentText == null) {
        break missingId;
      }

      id = R.id.scanDateText;
      TextView scanDateText = ViewBindings.findChildViewById(rootView, id);
      if (scanDateText == null) {
        break missingId;
      }

      id = R.id.shareButton;
      Button shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      return new ItemScanHistoryBinding((CardView) rootView, copyButton, openButton,
          scanContentText, scanDateText, shareButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
